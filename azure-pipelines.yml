trigger:
- master

resources:
- repo: self

variables:
- group: brandup-ui-app
- name: vmImageName
  value: 'ubuntu-latest'
- name: envName
  value: 'brandup-ui-app'

name: $(version-major).$(version-minor).$(rev:r)

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildNpm
    displayName: Build NPM
    dependsOn: [ BuildNet ]
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        echo "Hello, world!"
        echo "build number - $(Build.BuildNumber)"
      displayName: 'print variables'

    - checkout: self
      clean: true
      persistCredentials: true

    - task: Npm@1
      displayName: 'npm install'
      inputs:
        command: 'install'
        workingDir: 'brandup-ui-app'

    - task: Npm@1
      displayName: 'npm update'
      inputs:
        command: custom
        customCommand: update --save
        workingDir: 'brandup-ui-app'

    - task: Npm@1
      displayName: 'npm build'
      inputs:
        command: custom
        customCommand: 'run build'
        workingDir: 'brandup-ui-app'

    - task: Npm@1
      displayName: 'npm set version'
      inputs:
        command: custom
        customCommand: 'version "$(Build.BuildNumber)" --no-git-tag-version'
        workingDir: 'brandup-ui-app'

    - task: CopyFiles@2
      displayName: 'npm copy to artifact'
      inputs:
        SourceFolder: 'brandup-ui-app'
        Contents: |
         source/**
         package.json
         README.md
        TargetFolder: '$(Build.ArtifactStagingDirectory)/brandup-ui-app/'

    - publish: $(build.artifactstagingdirectory)
      displayName: publish artifact
      condition: succeededOrFailed()
      artifact: npm

  - job: GitTag
    displayName: Add git tag
    dependsOn: [ BuildNpm ]
    condition: succeeded()
    steps:
    - checkout: self
      clean: true
      persistCredentials: true

    - pwsh: |
          git config --global user.name "AzureDevOps Agent"
          git tag "$(Build.BuildNumber)" --force
          git push origin "$(Build.BuildNumber)" --force
          Write-Output "Tagging $(Build.Repository.Name) with $(Build.BuildNumber)"
      displayName:  set git tag

- stage: Production
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Production
    condition: succeeded()
    displayName: Production
    pool:
      vmImage: $(vmImageName)
    environment: $(envName)
    strategy:
      runOnce:
        deploy:
          steps:

          - task: Npm@1
            displayName: 'publish npm'
            inputs:
              command: publish
              workingDir: '$(Pipeline.Workspace)/npm/brandup-ui-app/'
              publishEndpoint: '$(publish-npm-credentials)'